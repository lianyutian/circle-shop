<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="github.lianyutian.cshop.social.mapper.UserFollowerMapper">

    <resultMap id="BaseResultMap" type="github.lianyutian.cshop.social.model.po.UserFollower">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="followerId" column="follower_id" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="del" column="del" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,user_id,follower_id,
        create_time,del
    </sql>

    <insert id="batchInsert">
        insert into user_follower (id,user_id,follower_id,del)
        values
        <foreach collection="batchList" item="item" separator=",">
            (#{item.id},#{item.userId},#{item.followerId},#{item.del})
        </foreach>
    </insert>

    <update id="batchUpdate">
        UPDATE user_follower
        SET del = CASE
        <foreach collection="batchList" item="item" separator=" ">
            WHEN user_id=#{item.userId} AND follower_id=#{item.followerId} THEN #{item.del}
        </foreach>
        END
        WHERE (user_id, follower_id) IN (
        <foreach collection="batchList" item="item" separator="," open="(" close=")">
            (#{item.userId}, #{item.followerId})
        </foreach>
        )
    </update>

    <select id="selectFollowerIdList" resultType="java.lang.Long">
        SELECT follower_id
        FROM user_follower
        WHERE (user_id, follower_id) IN
        <foreach collection="userFollowerSet" item="item" open="(" separator="," close=")">
            (#{item.userId}, #{item.followerId})
        </foreach>
    </select>

    <select id="selectFollowerIdListByUserId" resultType="java.lang.Long">
        SELECT follower_id
        FROM user_follower
        WHERE user_id = #{userId}
        limit ${limit} offset #{offset}
    </select>
</mapper>
